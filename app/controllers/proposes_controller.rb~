class ProposesController < ApplicationController
before_filter :authenticate_admin! 
require 'will_paginate/array' 
  # GET /proposes

  # GET /proposes.json
  def index

params[:min_price] = case current_admin.level
	when 1 then -1
	when 2 then 2800
	when 3 then 2400
	when 4 then -1
        else 0
end

params[:max_price] = case current_admin.level
	when 1 then 100000
	when 2 then 100000
	when 3 then 5000
	when 4 then 2800
	else 0
end

params[:statuss] = case current_admin.level
	when 1 then params[:statuss]
	when 2 then "Актуально"
	when 3 then "Актуально"
	when 4 then "Актуально"
	else 0
end
    @proposescount=Propose.search (params[:search],params[:search1],params[:search3],params[:search4],params[:search5],params[:search6],params[:search7],params[:search8], params[:statuss], params[:min_price],params[:max_price],params[:phone]).paginate(:page => params[:page]).count
    @proposes = Propose.search (params[:search],params[:search1],params[:search3],params[:search4],params[:search5],params[:search6],params[:search7],params[:search8], params[:statuss], params[:min_price],params[:max_price],params[:phone]).paginate(:page => params[:page], :per_page=>50)
    
    
  end

  # GET /proposes/1
  # GET /proposes/1.json

  def show
    @propose = Propose.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.json { render :json => @propose }
    end
  end


  # GET /proposes/new
  # GET /proposes/new.json
  def new
    
	
    @propose = Propose.new
    respond_to do |format|
      format.html # new.html.erb
      format.json { render :json => @propose }

    end

  end

  # GET /proposes/1/edit
  def edit
    @propose = Propose.find(params[:id])
  end

  # POST /proposes
  # POST /proposes.json
  def create
	
    @propose = Propose.new(params[:propose])

    respond_to do |format|
      if @propose.save
        format.html { redirect_to @propose, :notice => 'Propose was successfully created.' }
        format.json { render :json => @propose, :status => :created, :location => @propose }
      else
        format.html { render :action => "new" }
        format.json { render :json => @propose.errors, :status => :unprocessable_entity }
      end
    end

  end

  # PUT /proposes/1
  # PUT /proposes/1.json
  def update

    @propose = Propose.find(params[:id])

    respond_to do |format|
      if @propose.update_attributes(params[:propose])
        format.html { redirect_to @propose, :notice => 'Propose was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render :action => "edit" }
        format.json { render :json => @propose.errors, :status => :unprocessable_entity }
      end
    end


  end

  # DELETE /proposes/1
  # DELETE /proposes/1.json
  def destroy

    @propose = Propose.find(params[:id])
    @propose.destroy

    respond_to do |format|
      format.html { redirect_to proposes_url }
      format.json { head :no_content }
    end
  end

end
